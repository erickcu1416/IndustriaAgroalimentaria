// <auto-generated />
using System;
using IndustriaAgroalimentaria.DAO;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IndustriaAgroalimentaria.Migrations
{
    [DbContext(typeof(IndustriaAgroalimentariaContext))]
    [Migration("20200620192428_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("IndustriaAgroalimentaria.Modelos.Producto", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCaducidad")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaEnvasado")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("NumeroLote")
                        .HasColumnType("int");

                    b.Property<string>("PaisOrigen")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Productos");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Producto");
                });

            modelBuilder.Entity("IndustriaAgroalimentaria.Modelos.ProductoCongelado", b =>
                {
                    b.HasBaseType("IndustriaAgroalimentaria.Modelos.Producto");

                    b.Property<string>("TemperaturaRecomendada")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasDiscriminator().HasValue("ProductoCongelado");
                });

            modelBuilder.Entity("IndustriaAgroalimentaria.Modelos.ProductoFresco", b =>
                {
                    b.HasBaseType("IndustriaAgroalimentaria.Modelos.Producto");

                    b.HasDiscriminator().HasValue("ProductoFresco");
                });

            modelBuilder.Entity("IndustriaAgroalimentaria.Modelos.ProductoRefrigerado", b =>
                {
                    b.HasBaseType("IndustriaAgroalimentaria.Modelos.Producto");

                    b.Property<string>("COSA")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TemperaturaRecomendada")
                        .HasColumnName("ProductoRefrigerado_TemperaturaRecomendada")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasDiscriminator().HasValue("ProductoRefrigerado");
                });

            modelBuilder.Entity("IndustriaAgroalimentaria.Modelos.ProductosCongelados.ProductoCongeladoAgua", b =>
                {
                    b.HasBaseType("IndustriaAgroalimentaria.Modelos.ProductoCongelado");

                    b.Property<double>("GSPLA")
                        .HasColumnType("double");

                    b.HasDiscriminator().HasValue("ProductoCongeladoAgua");
                });

            modelBuilder.Entity("IndustriaAgroalimentaria.Modelos.ProductosCongelados.ProductoCongeladoAire", b =>
                {
                    b.HasBaseType("IndustriaAgroalimentaria.Modelos.ProductoCongelado");

                    b.Property<double>("PorcentajeDioxidoCarbono")
                        .HasColumnType("double");

                    b.Property<double>("PorcentajeNitrogeno")
                        .HasColumnType("double");

                    b.Property<double>("PorcentajeOxigeno")
                        .HasColumnType("double");

                    b.Property<double>("PorcentajeVaporAgua")
                        .HasColumnType("double");

                    b.HasDiscriminator().HasValue("ProductoCongeladoAire");
                });

            modelBuilder.Entity("IndustriaAgroalimentaria.Modelos.ProductosCongelados.ProductoCongeladoNitrogeno", b =>
                {
                    b.HasBaseType("IndustriaAgroalimentaria.Modelos.ProductoCongelado");

                    b.Property<string>("ENPS")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MetodoCongelacion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasDiscriminator().HasValue("ProductoCongeladoNitrogeno");
                });
#pragma warning restore 612, 618
        }
    }
}
